Dump of assembler code for function p:
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	sub    esp,0x1018
<+9>:	mov    eax,DWORD PTR [ebp+0xc]
<+12>:	mov    DWORD PTR [esp],eax
<+15>:	call   0x80483b0 <puts@plt>
<+20>:	mov    DWORD PTR [esp+0x8],0x1000
<+28>:	lea    eax,[ebp-0x1008]
<+34>:	mov    DWORD PTR [esp+0x4],eax
<+38>:	mov    DWORD PTR [esp],0x0
<+45>:	call   0x8048380 <read@plt>
<+50>:	mov    DWORD PTR [esp+0x4],0xa
<+58>:	lea    eax,[ebp-0x1008]
<+64>:	mov    DWORD PTR [esp],eax
<+67>:	call   0x80483d0 <strchr@plt>
<+72>:	mov    BYTE PTR [eax],0x0
<+75>:	lea    eax,[ebp-0x1008]
<+81>:	mov    DWORD PTR [esp+0x8],0x14
<+89>:	mov    DWORD PTR [esp+0x4],eax
<+93>:	mov    eax,DWORD PTR [ebp+0x8]
<+96>:	mov    DWORD PTR [esp],eax
<+99>:	call   0x80483f0 <strncpy@plt>
<+104>:	leave
<+105>:	ret

Dump of assembler code for function pp:
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	push   edi
<+4>:	push   ebx
<+5>:	sub    esp,0x50
<+8>:	mov    DWORD PTR [esp+0x4],0x80486a0
<+16>:	lea    eax,[ebp-0x30]
<+19>:	mov    DWORD PTR [esp],eax
<+22>:	call   0x80484b4 <p>
<+27>:	mov    DWORD PTR [esp+0x4],0x80486a0
<+35>:	lea    eax,[ebp-0x1c]
<+38>:	mov    DWORD PTR [esp],eax
<+41>:	call   0x80484b4 <p>
<+46>:	lea    eax,[ebp-0x30]
<+49>:	mov    DWORD PTR [esp+0x4],eax
<+53>:	mov    eax,DWORD PTR [ebp+0x8]
<+56>:	mov    DWORD PTR [esp],eax
<+59>:	call   0x80483a0 <strcpy@plt>
<+64>:	mov    ebx,0x80486a4
<+69>:	mov    eax,DWORD PTR [ebp+0x8]
<+72>:	mov    DWORD PTR [ebp-0x3c],0xffffffff
<+79>:	mov    edx,eax
<+81>:	mov    eax,0x0
<+86>:	mov    ecx,DWORD PTR [ebp-0x3c]
<+89>:	mov    edi,edx
<+91>:	repnz scas al,BYTE PTR es:[edi]
<+93>:	mov    eax,ecx
<+95>:	not    eax
<+97>:	sub    eax,0x1
<+100>:	add    eax,DWORD PTR [ebp+0x8]
<+103>:	movzx  edx,WORD PTR [ebx]
<+106>:	mov    WORD PTR [eax],dx
<+109>:	lea    eax,[ebp-0x1c]
<+112>:	mov    DWORD PTR [esp+0x4],eax
<+116>:	mov    eax,DWORD PTR [ebp+0x8]
<+119>:	mov    DWORD PTR [esp],eax
<+122>:	call   0x8048390 <strcat@plt>
<+127>:	add    esp,0x50
<+130>:	pop    ebx
<+131>:	pop    edi
<+132>:	pop    ebp
<+133>:	ret

Dump of assembler code for function main:
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	and    esp,0xfffffff0
<+6>:	sub    esp,0x40
<+9>:	lea    eax,[esp+0x16]
<+13>:	mov    DWORD PTR [esp],eax
<+16>:	call   0x804851e <pp>
<+21>:	lea    eax,[esp+0x16]
<+25>:	mov    DWORD PTR [esp],eax
<+28>:	call   0x80483b0 <puts@plt>
<+33>:	mov    eax,0x0
<+38>:	leave
<+39>:	ret
