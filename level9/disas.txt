Dump of assembler code for function _ZN1NC2Ei: [N::N]
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	mov    eax,DWORD PTR [ebp+0x8]
<+6>:	mov    DWORD PTR [eax],0x8048848
<+12>:	mov    eax,DWORD PTR [ebp+0x8]
<+15>:	mov    edx,DWORD PTR [ebp+0xc]
<+18>:	mov    DWORD PTR [eax+0x68],edx
<+21>:	pop    ebp
<+22>:	ret

Dump of assembler code for function _ZN1N13setAnnotationEPc: [N::setAnnotation]
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	sub    esp,0x18
<+6>:	mov    eax,DWORD PTR [ebp+0xc]
<+9>:	mov    DWORD PTR [esp],eax
<+12>:	call   0x8048520 <strlen@plt>
<+17>:	mov    edx,DWORD PTR [ebp+0x8]
<+20>:	add    edx,0x4
<+23>:	mov    DWORD PTR [esp+0x8],eax
<+27>:	mov    eax,DWORD PTR [ebp+0xc]
<+30>:	mov    DWORD PTR [esp+0x4],eax
<+34>:	mov    DWORD PTR [esp],edx
<+37>:	call   0x8048510 <memcpy@plt>
<+42>:	leave
<+43>:	ret

Dump of assembler code for function _ZN1NplERS_: [N::operator+(N&)]
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	mov    eax,DWORD PTR [ebp+0x8]
<+6>:	mov    edx,DWORD PTR [eax+0x68]
<+9>:	mov    eax,DWORD PTR [ebp+0xc]
<+12>:	mov    eax,DWORD PTR [eax+0x68]
<+15>:	add    eax,edx
<+17>:	pop    ebp
<+18>:	ret

Dump of assembler code for function _ZN1NmiERS_: [N::operator-(N&)]
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	mov    eax,DWORD PTR [ebp+0x8]
<+6>:	mov    edx,DWORD PTR [eax+0x68]
<+9>:	mov    eax,DWORD PTR [ebp+0xc]
<+12>:	mov    eax,DWORD PTR [eax+0x68]
<+15>:	mov    ecx,edx
<+17>:	sub    ecx,eax
<+19>:	mov    eax,ecx
<+21>:	pop    ebp
<+22>:	ret

Dump of assembler code for function main:
<+0>:	push   ebp
<+1>:	mov    ebp,esp
<+3>:	push   ebx
<+4>:	and    esp,0xfffffff0
<+7>:	sub    esp,0x20
<+10>:	cmp    DWORD PTR [ebp+0x8],0x1
<+14>:	jg     0x8048610 <main+28>
<+16>:	mov    DWORD PTR [esp],0x1
<+23>:	call   0x80484f0 <_exit@plt>
<+28>:	mov    DWORD PTR [esp],0x6c
<+35>:	call   0x8048530 <_Znwj@plt>
<+40>:	mov    ebx,eax
<+42>:	mov    DWORD PTR [esp+0x4],0x5
<+50>:	mov    DWORD PTR [esp],ebx
<+53>:	call   0x80486f6 <_ZN1NC2Ei>
<+58>:	mov    DWORD PTR [esp+0x1c],ebx
<+62>:	mov    DWORD PTR [esp],0x6c
<+69>:	call   0x8048530 <_Znwj@plt>
<+74>:	mov    ebx,eax
<+76>:	mov    DWORD PTR [esp+0x4],0x6
<+84>:	mov    DWORD PTR [esp],ebx
<+87>:	call   0x80486f6 <_ZN1NC2Ei>
<+92>:	mov    DWORD PTR [esp+0x18],ebx
<+96>:	mov    eax,DWORD PTR [esp+0x1c]
<+100>:	mov    DWORD PTR [esp+0x14],eax
<+104>:	mov    eax,DWORD PTR [esp+0x18]
<+108>:	mov    DWORD PTR [esp+0x10],eax
<+112>:	mov    eax,DWORD PTR [ebp+0xc]
<+115>:	add    eax,0x4
<+118>:	mov    eax,DWORD PTR [eax]
<+120>:	mov    DWORD PTR [esp+0x4],eax
<+124>:	mov    eax,DWORD PTR [esp+0x14]
<+128>:	mov    DWORD PTR [esp],eax
<+131>:	call   0x804870e <_ZN1N13setAnnotationEPc>
<+136>:	mov    eax,DWORD PTR [esp+0x10]
<+140>:	mov    eax,DWORD PTR [eax]
<+142>:	mov    edx,DWORD PTR [eax]
<+144>:	mov    eax,DWORD PTR [esp+0x14]
<+148>:	mov    DWORD PTR [esp+0x4],eax
<+152>:	mov    eax,DWORD PTR [esp+0x10]
<+156>:	mov    DWORD PTR [esp],eax
<+159>:	call   edx
<+161>:	mov    ebx,DWORD PTR [ebp-0x4]
<+164>:	leave
<+165>:	ret
